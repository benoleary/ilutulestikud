package main
import (
	"google.golang.org/appengine"
	"net/http"

	"github.com/benoleary/ilutulestikud/backend/defaults"
	"github.com/benoleary/ilutulestikud/backend/game"
	"github.com/benoleary/ilutulestikud/backend/player"
	"github.com/benoleary/ilutulestikud/backend/server"
)
func main() {
	// This main function just injects hard-coded dependencies.
	playerPersister := player.NewInMemoryPersister()
	playerCollection :=
		player.NewCollection(
			playerPersister,
			defaults.InitialPlayerNames(),
			defaults.AvailableColors())
	gameCollection := game.NewInMemoryCollection(&endpoint.Base32NameEncoder{})
	gameGetAndPostHandler := game.NewGetAndPostHandler(playerCollection, gameCollection)

	// We could load the allowed origin from a file, but this app is very specific to a set of fixed addresses.
	serverState :=
	    server.New(
			"https://storage.googleapis.com",
			&server.Base32Translator{},
			playerCollection,
			gameGetAndPostHandler)
	http.HandleFunc("/backend/", serverState.HandleBackend)
	http.ListenAndServe(":8080", nil)
	appengine.Main()
}
